<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.7">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.22.1">
      <projectUrl>{{ github_project_url }}</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GIT_SHA</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GIT_REPO_URL</name>
          <description></description>
          <defaultValue>{{ git_repo_url }}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GIT_CREDENTIALS_ID</name>
          <description></description>
          <defaultValue>{{ git_credentials_id }}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_IMAGE_NAME</name>
          <description></description>
          <defaultValue>secret-scan</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_IMAGE_TAG</name>
          <description></description>
          <defaultValue>latest</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_REG_CREDENTIALS_ID</name>
          <description></description>
          <defaultValue>{{ docker_registry_credentials_id }}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>COMMITS_MAX_DEPTH</name>
          <description></description>
          <defaultValue>3</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_REGISTRY</name>
          <description></description>
          <defaultValue>{{ docker_registry }}</defaultValue>
        </hudson.model.StringParameterDefinition>

        {% if docker_daemon_host %}
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_DAEMON_HOST</name>
          <description></description>
          <defaultValue>{{ docker_daemon_host }}</defaultValue>
        </hudson.model.StringParameterDefinition>
        {% endif %}
        {% if docker_daemon_dns_discovery %}
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_DAEMON_DNS_DISCOVERY</name>
          <description></description>
          <defaultValue>{{ docker_daemon_dns_discovery }}</defaultValue>
        </hudson.model.StringParameterDefinition>
        {% endif %}

      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.22.1">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.18">
    <script>ansiColor('xterm') { secretsScan {} }</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>
