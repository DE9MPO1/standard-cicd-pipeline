{
    "version": 3,
    "terraform_version": "0.10.7",
    "serial": 7,
    "lineage": "79d779c3-6877-4011-b90a-b9e4d311a672",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_autoscaling_group.dockerds": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.dockerds"
                    ],
                    "primary": {
                        "id": "docker-daemon-asg",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:949715090515:autoScalingGroup:352ca89b-5b02-4180-9baa-4ec30223a146:autoScalingGroupName/docker-daemon-asg",
                            "availability_zones.#": "2",
                            "availability_zones.1726430690": "us-east-2b",
                            "availability_zones.4293815384": "us-east-2a",
                            "default_cooldown": "300",
                            "desired_capacity": "2",
                            "force_delete": "false",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "docker-daemon-asg",
                            "launch_configuration": "docker-daemon-lc-20171213225106341400000001",
                            "load_balancers.#": "0",
                            "max_size": "2",
                            "metrics_granularity": "1Minute",
                            "min_size": "2",
                            "name": "docker-daemon-asg",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tags.#": "5",
                            "tags.0.%": "3",
                            "tags.0.key": "Name",
                            "tags.0.propagate_at_launch": "1",
                            "tags.0.value": "docker-daemon-asg",
                            "tags.1.%": "3",
                            "tags.1.key": "project",
                            "tags.1.propagate_at_launch": "1",
                            "tags.1.value": "devops",
                            "tags.2.%": "3",
                            "tags.2.key": "environment",
                            "tags.2.propagate_at_launch": "1",
                            "tags.2.value": "production",
                            "tags.3.%": "3",
                            "tags.3.key": "service",
                            "tags.3.propagate_at_launch": "1",
                            "tags.3.value": "docker",
                            "tags.4.%": "3",
                            "tags.4.key": "customer",
                            "tags.4.propagate_at_launch": "1",
                            "tags.4.value": "wizeline",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "2",
                            "vpc_zone_identifier.1198010788": "subnet-e8c83080",
                            "vpc_zone_identifier.1649395505": "subnet-389ca043",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.dockerds": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "docker-daemon-lc-20171213225106341400000001",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "",
                            "id": "docker-daemon-lc-20171213225106341400000001",
                            "image_id": "ami-01e2cb64",
                            "instance_type": "t2.micro",
                            "key_name": "devops-kops-cluster",
                            "name": "docker-daemon-lc-20171213225106341400000001",
                            "name_prefix": "docker-daemon-lc-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.4270280328": "sg-1fbd8277",
                            "spot_price": "",
                            "user_data": "b19aa045e82ba4da9fbd30687e885e195f5d4f6c",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.dockerd": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-1fbd8277",
                        "attributes": {
                            "description": "Docker daemon server security group",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-1fbd8277",
                            "ingress.#": "2",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.4208013351.cidr_blocks.#": "1",
                            "ingress.4208013351.cidr_blocks.0": "10.0.0.0/16",
                            "ingress.4208013351.description": "",
                            "ingress.4208013351.from_port": "4243",
                            "ingress.4208013351.ipv6_cidr_blocks.#": "0",
                            "ingress.4208013351.protocol": "tcp",
                            "ingress.4208013351.security_groups.#": "0",
                            "ingress.4208013351.self": "false",
                            "ingress.4208013351.to_port": "4243",
                            "name": "docker-daemon",
                            "owner_id": "949715090515",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "5",
                            "tags.Name": "docker-daemon",
                            "tags.customer": "wizeline",
                            "tags.environment": "production",
                            "tags.project": "devops",
                            "tags.service": "docker",
                            "vpc_id": "vpc-dc13e4b4"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.coreos": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-01e2cb64",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "2",
                            "block_device_mappings.340275815.device_name": "/dev/xvda",
                            "block_device_mappings.340275815.ebs.%": "6",
                            "block_device_mappings.340275815.ebs.delete_on_termination": "true",
                            "block_device_mappings.340275815.ebs.encrypted": "false",
                            "block_device_mappings.340275815.ebs.iops": "0",
                            "block_device_mappings.340275815.ebs.snapshot_id": "snap-0ed677b101eace457",
                            "block_device_mappings.340275815.ebs.volume_size": "8",
                            "block_device_mappings.340275815.ebs.volume_type": "gp2",
                            "block_device_mappings.340275815.no_device": "",
                            "block_device_mappings.340275815.virtual_name": "",
                            "block_device_mappings.3754555969.device_name": "/dev/xvdb",
                            "block_device_mappings.3754555969.ebs.%": "0",
                            "block_device_mappings.3754555969.no_device": "",
                            "block_device_mappings.3754555969.virtual_name": "ephemeral0",
                            "creation_date": "2017-12-06T05:10:11.000Z",
                            "description": "CoreOS Container Linux stable 1576.4.0 (HVM)",
                            "filter.#": "2",
                            "filter.1006975187.name": "name",
                            "filter.1006975187.values.#": "1",
                            "filter.1006975187.values.0": "CoreOS-stable-*-hvm",
                            "filter.490168357.name": "virtualization-type",
                            "filter.490168357.values.#": "1",
                            "filter.490168357.values.0": "hvm",
                            "hypervisor": "xen",
                            "id": "ami-01e2cb64",
                            "image_id": "ami-01e2cb64",
                            "image_location": "595879546273/CoreOS-stable-1576.4.0-hvm",
                            "image_type": "machine",
                            "most_recent": "true",
                            "name": "CoreOS-stable-1576.4.0-hvm",
                            "owner_id": "595879546273",
                            "owners.#": "1",
                            "owners.0": "595879546273",
                            "product_codes.#": "0",
                            "public": "true",
                            "root_device_name": "/dev/xvda",
                            "root_device_type": "ebs",
                            "root_snapshot_id": "snap-0ed677b101eace457",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.%": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.user_data": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "0c9f4bd50651ab5281c6ef6f1de66d2b2c4bc475de01116f61f9e6e016268d1c",
                        "attributes": {
                            "id": "0c9f4bd50651ab5281c6ef6f1de66d2b2c4bc475de01116f61f9e6e016268d1c",
                            "rendered": "#!/bin/bash\n\ncat \u003c\u003c EOF \u003e /etc/systemd/system/docker-tcp.socket\n\n[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=4243\nBindIPv6Only=both\nService=docker.service\n\n[Install]\nWantedBy=sockets.target\nEOF\n\n# To upgrade to docker 17.x.x do:\nmkdir -p /etc/coreos \u0026\u0026 echo no \u003e /etc/coreos/docker-1.12\n\n# Enable tcp socket\nsystemctl enable docker-tcp.socket\nsystemctl stop docker\nsystemctl start docker-tcp.socket\nsystemctl start docker\nsystemctl enable docker.service\nsystemctl start docker.service\n\n# Install docker-compose\nmkdir -p /opt/bin\ncurl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` \u003e /opt/bin/docker-compose\nchmod +x /opt/bin/docker-compose\n\nmkdir -p /opt/portainer\ngit clone https://github.com/portainer/portainer-compose.git /opt/portainer\n\nmkdir -p /opt/portainer/data\ncat \u003c\u003c EOF \u003e /opt/portainer/docker-compose.yml\nversion: '2'\n\nservices:\n  proxy:\n    build: nginx/\n    container_name: \"portainer-proxy\"\n    ports:\n      - \"80:80\"\n    networks:\n      - local\n    restart: always\n\n  templates:\n    image: portainer/templates\n    container_name: \"portainer-templates\"\n    networks:\n      - local\n    restart: always\n\n  portainer:\n    image: portainer/portainer\n    container_name: \"portainer-app\"\n    # Automatically choose 'Manage the Docker instance where Portainer is running'\n    # by adding \u003c--host=unix:///var/run/docker.sock\u003e to the command\n    command: --templates http://templates/templates.json\n    networks:\n      - local\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /opt/portainer/data:/data\n    restart: always\n\n  watchtower:\n    image: v2tec/watchtower\n    container_name: \"portainer-watchtower\"\n    command: --cleanup portainer-app portainer-watchtower portainer/templates\n    networks:\n      - local\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    restart: always\n\nnetworks:\n  local:\n    driver: bridge\nEOF\n\ncd /opt/portainer/ \u0026\u0026 /opt/bin/docker-compose up -d\n\n# -- Consul Node --\n\n# Ips\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nPUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)\nPRIVATE_IP_HIPHENS=${PRIVATE_IP//./-}\n\n# Setup Consul\nmkdir -p /tmp/consul\nmkdir -p /etc/consul\ntee /etc/consul/server.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"bind_addr\": \"$PRIVATE_IP\",\n  \"acl_datacenter\":\"us-east-2\",\n  \"datacenter\":\"us-east-2\",\n  \"acl_default_policy\":\"deny\",\n  \"acl_down_policy\":\"deny\",\n  \"acl_master_token\":\"2B528F74-77B1-48B5-873B-792DD06F698C\",\n  \"encrypt\": \"hu7rG6dMmUDfypIFgWAbZA==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true\n}\nEOF\n\n\nexport CONSUL_SERVICE_HOST=internal-a07f01674e03811e780fb06db98d3788-1860232269.us-east-2.elb.amazonaws.com\ndocker run --restart always --network=host -i -v /tmp/consul:/consul/data -v /etc/consul:/etc/consul  consul:1.0.1 agent \\\n    -data-dir=/tmp/consul \\\n    -retry-join=$CONSUL_SERVICE_HOST \\\n    -config-file=/etc/consul/server.json \\\n    -node=dockerd-$PRIVATE_IP_HIPHENS\n",
                            "template": "#!/bin/bash\n\ncat \u003c\u003c EOF \u003e /etc/systemd/system/docker-tcp.socket\n\n[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=4243\nBindIPv6Only=both\nService=docker.service\n\n[Install]\nWantedBy=sockets.target\nEOF\n\n# To upgrade to docker 17.x.x do:\nmkdir -p /etc/coreos \u0026\u0026 echo no \u003e /etc/coreos/docker-1.12\n\n# Enable tcp socket\nsystemctl enable docker-tcp.socket\nsystemctl stop docker\nsystemctl start docker-tcp.socket\nsystemctl start docker\nsystemctl enable docker.service\nsystemctl start docker.service\n\n# Install docker-compose\nmkdir -p /opt/bin\ncurl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` \u003e /opt/bin/docker-compose\nchmod +x /opt/bin/docker-compose\n\nmkdir -p /opt/portainer\ngit clone https://github.com/portainer/portainer-compose.git /opt/portainer\n\nmkdir -p /opt/portainer/data\ncat \u003c\u003c EOF \u003e /opt/portainer/docker-compose.yml\nversion: '2'\n\nservices:\n  proxy:\n    build: nginx/\n    container_name: \"portainer-proxy\"\n    ports:\n      - \"80:80\"\n    networks:\n      - local\n    restart: always\n\n  templates:\n    image: portainer/templates\n    container_name: \"portainer-templates\"\n    networks:\n      - local\n    restart: always\n\n  portainer:\n    image: portainer/portainer\n    container_name: \"portainer-app\"\n    # Automatically choose 'Manage the Docker instance where Portainer is running'\n    # by adding \u003c--host=unix:///var/run/docker.sock\u003e to the command\n    command: --templates http://templates/templates.json\n    networks:\n      - local\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /opt/portainer/data:/data\n    restart: always\n\n  watchtower:\n    image: v2tec/watchtower\n    container_name: \"portainer-watchtower\"\n    command: --cleanup portainer-app portainer-watchtower portainer/templates\n    networks:\n      - local\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    restart: always\n\nnetworks:\n  local:\n    driver: bridge\nEOF\n\ncd /opt/portainer/ \u0026\u0026 /opt/bin/docker-compose up -d\n\n# -- Consul Node --\n\n# Ips\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nPUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)\nPRIVATE_IP_HIPHENS=$${PRIVATE_IP//./-}\n\n# Setup Consul\nmkdir -p /tmp/consul\nmkdir -p /etc/consul\ntee /etc/consul/server.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"bind_addr\": \"$PRIVATE_IP\",\n  \"acl_datacenter\":\"us-east-2\",\n  \"datacenter\":\"us-east-2\",\n  \"acl_default_policy\":\"deny\",\n  \"acl_down_policy\":\"deny\",\n  \"acl_master_token\":\"2B528F74-77B1-48B5-873B-792DD06F698C\",\n  \"encrypt\": \"hu7rG6dMmUDfypIFgWAbZA==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true\n}\nEOF\n\n\nexport CONSUL_SERVICE_HOST=internal-a07f01674e03811e780fb06db98d3788-1860232269.us-east-2.elb.amazonaws.com\ndocker run --restart always --network=host -i -v /tmp/consul:/consul/data -v /etc/consul:/etc/consul  consul:1.0.1 agent \\\n    -data-dir=/tmp/consul \\\n    -retry-join=$CONSUL_SERVICE_HOST \\\n    -config-file=/etc/consul/server.json \\\n    -node=dockerd-$PRIVATE_IP_HIPHENS\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
